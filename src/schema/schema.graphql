"Definicion de esquema"
type Query{
    users: ResultUsers,
    login(email: String!, password: String!)
}

type Mutation{
    register(user: UserInput!): User
}

""" definiendo los atributos de los usuarios """

type User{
    "id unico"
    id: ID!
    name: String!
    lastname: String!
    email: String!
    password: String!
    registerDate: String!
    birthdate: String!,
    role: Role!
}

type ResultUsers implements Result{
    status: Boolean!
    message: String!
    users: [User!]!
}

"user a recibir"
input UserInput{
    "id unico"
    id: ID
    name: String!
    lastname: String!
    email: String!
    password: String!
    birthdate: String!,
    role: Role=CLIENT
}
"roles de usuario"
enum Role {
    CLIENT
    ADMIN
}

interface Result{
    status: Boolean!
    message: String!
}